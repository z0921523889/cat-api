version: '3.7'
services:

  traefik:
    image: traefik
    container_name: traefik
    ports:
      - 80:80
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml
    restart: always

  web_api:
    build:
      context: .
      dockerfile: Dockerfile
    image: ${TYPE}_${PROJECT_NAME}_web_api
    container_name: ${TYPE}_${PROJECT_NAME}_web_api
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: "Host:${DOMAIN_NAME}"
      traefik.backend: "${TYPE}-${PROJECT_NAME}-web-api"
      traefik.port: "${APPLICATION_PORT}"
    depends_on:
      - sys_postgres
    environment:
      TYPE: ${TYPE}
      PROJECT_NAME: ${PROJECT_NAME}
      VERSION: ${VERSION}
      DOMAIN_NAME: ${DOMAIN_NAME}
      APPLICATION_HOST: ${APPLICATION_HOST}
      APPLICATION_PORT: ${APPLICATION_PORT}
      POSTGRES_HOST: sys_postgres
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SCHEDULE_JOB_ENABLE: ${SCHEDULE_JOB_ENABLE}
    restart: always
    networks:
      - traefik


  sys_postgres:
    image: "postgres:latest"
    container_name: ${TYPE}_${PROJECT_NAME}_sys_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}
    volumes:
      - sys_postgres_db:/var/lib/postgresql/data
    networks:
      - traefik

volumes:
  sys_postgres_db:
    name: ${TYPE}_${PROJECT_NAME}_sys_postgres_db

networks:
  traefik:
    external:
      name: traefik
